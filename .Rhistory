val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group[, c("seats", "tier1_avemag", "tier1_districts", "upper_tier_seats", "legal_threshold", "Carey_Hix_mean_dm", "eff_thresh", "maxeffleg")] <- lapply(senate_group[, c("seats", "tier1_avemag", "tier1_districts", "upper_tier_seats", "legal_threshold", "Carey_Hix_mean_dm", "eff_thresh", "maxeffleg")], as.numeric)
senate_group <- na.omit(senate_group)
senate_group <-cat2bin(senate_group,categorical=c(2,3,4))
senate_group
senate_group$data
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower", type=list(symm=2))
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group[, c("seats", "tier1_avemag", "tier1_districts", "upper_tier_seats", "legal_threshold", "Carey_Hix_mean_dm", "eff_thresh", "maxeffleg")] <- lapply(senate_group[, c("seats", "tier1_avemag", "tier1_districts", "upper_tier_seats", "legal_threshold", "Carey_Hix_mean_dm", "eff_thresh", "maxeffleg")], as.numeric)
senate_group <- na.omit(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower", type=list(symm=2))
levels(senate_group$Carey_Hix_mean_dm)
levels(senate_group$elecrule)
n      = 15
cont   = c(rnorm(n, mean=0, sd=1),
rnorm(n, mean=1, sd=1),
rnorm(n, mean=2, sd=1) )
bin    = c(rbinom(n, size=1, prob=.2),
rbinom(n, size=1, prob=.5),
rbinom(n, size=1, prob=.8) )
ord    = c(rbinom(n, size=5, prob=.2),
rbinom(n, size=5, prob=.5),
rbinom(n, size=5, prob=.8) )
data   = data.frame(cont=cont, bin=bin, ord=factor(ord, ordered=TRUE))
g.dist = daisy(data, metric="gower", type=list(symm=2))
data
n      = 15
cont   = c(rnorm(n, mean=0, sd=1),
rnorm(n, mean=1, sd=1),
rnorm(n, mean=2, sd=1) )
bin    = c(rbinom(n, size=1, prob=.2),
rbinom(n, size=1, prob=.5),
rbinom(n, size=1, prob=.8) )
ord    = c(rbinom(n, size=5, prob=.2),
rbinom(n, size=5, prob=.5),
rbinom(n, size=5, prob=.8) )
data   = data.frame(cont=cont, bin=bin, ord=factor(ord, ordered=FALSE))
g.dist = daisy(data, metric="gower", type=list(symm=2))
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- lapply(senate_group, as.numeric)
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], as.factor)
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- as.data.frame(lapply(senate_group, as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], as.factor)
senate_group <- na.omit(senate_group)
levels(senate_group$tier1_formula)
View(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower", type=list(symm=2))
View(senate_group)
View(data)
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- as.data.frame(lapply(senate_group, as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], function(x) as.factor(x)-1)
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- as.data.frame(lapply(senate_group, as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], function(x) as.factor(as.numeric(as.factor(x))-1))
senate_group <- na.omit(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower", type=list(symm=2))
senate_group[,c("elecrule", "Carey_Hix_mean_dm")]
data
levels(data$ord)
levels(senate_group$elecrule)
g.dist = daisy(data, metric="gower"
)
?daisy
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower")
hc.c = hclust(g.dist, method="complete")
plot(hc.c)
# group senate by country and bloc
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- as.data.frame(lapply(senate_group, as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], as.factor)
senate_group <- na.omit(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower")
hc.c = hclust(g.dist, method="complete")
plot(hc.c)
hc.c$labels <- senate_group[,1]
plot(hc.c)
hc.c$labels <- senate_group[,1]
hc.c$labels <- senate_group[-1,1]
plot(hc.c)
hc.c
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group <- as.data.frame(lapply(senate_group, as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], as.factor)
#senate_group <- na.omit(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower")
hc.c = hclust(g.dist, method="complete")
hc.c$labels
senate_group[-1,1]
View(senate_group)
senate_group <- data.frame(NULL)
for(i in unique(senate$country)){
sub <- senate[senate$country==i,]
for(j in unique(sub$bloc)){
sub2 <- sub[sub$bloc==j,]
name <- paste0(unique(sub2$country), unique(sub2$bloc))
val <- apply(sub2[,9:dim(sub2)[2]], 2, function(x){
vec <- as.numeric(x)
if(length(vec)%%2==0){
vec2 <- vec[-(which(vec==max(vec))[1])]
median(vec2)
}
else{
median(vec)
}
})
newrow <- data.frame(t(c(name, val)))
senate_group <- rbind(senate_group, newrow)
}
}
senate_group[,-1] <- as.data.frame(lapply(senate_group[,-1], as.numeric))
senate_group[,c("elecrule", "tier1_formula", "tier2_formula")] <- lapply(senate_group[,c("elecrule", "tier1_formula", "tier2_formula")], as.factor)
senate_group <- na.omit(senate_group)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower")
hc.c = hclust(g.dist, method="complete")
hc.c$labels <- senate_group[-1,1]
plot(hc.c)
g.dist = daisy(senate_group[,c("elecrule", "Carey_Hix_mean_dm")], metric="gower")
hc.c = hclust(g.dist, method="complete")
plot(hc.c)
hc.c$labels
senate_group[,1]
senate_group[-1,1]
length(senate_group[-1,1])
length(hc.c$labels)
hc.c$labels <- senate_group[,1]
plot(hc.c)
library(Rcpp)
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
add
add(1,2,3)
setwd("C:/Users/MauricioAndresVela/Documents/R/Clase/Group/BAMnew")
library(devtools)
library(roxygen2)
setwd("C:/Users/MauricioAndresVela/Documents/R/Clase/Group/BAMnew")
library(BaM)
install.packages(BaM)
install.packages("~/R/Clase/Group/bam.old.tar.gz", repos = NULL, type = "source")
install.packages("BaM")
library(BaM)
?china.wars
?BaM
??BaM
?dmultinorm
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
load_all(current.code)
document(current.code)
?china.wars
?BaM
??BaM
?dmultinorm
?chinawars
??china.wars
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
?durations.hpd
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
setwd("C:/Users/MauricioAndresVela/Documents/R/Clase/Group/BAMnew")
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaMnew)
library(BAMnew)
library(BaM2)
?china.wars
??china.wars
?dmultinorm
?wars
?mhplot
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?china.wars
?wars
china.wars()
china.wars
wars
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
?simple.hpd
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?romney
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?romney
?wars
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?romney
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?sir
?romney
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?t.ci.table
?BaM2
??BaM2
?t.ci
?t
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?walk
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?walk
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?walk
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?executions
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?experts
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?fdr
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?hanjack
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?iq
current.code <- as.package("BaM2")
load_all(current.code)
document(current.code)
library(BaM2)
?italy.parties
